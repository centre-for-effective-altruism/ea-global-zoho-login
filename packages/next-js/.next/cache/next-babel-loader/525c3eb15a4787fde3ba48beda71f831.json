{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/sam/Sites/ea/ea-global-zoho-login/packages/next-js/pages/_app.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import App from 'next/app'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport HeadTags from 'components/HeadTags';\nvar bodyFontStack = ['Merriweather', 'Georgia', 'Times New Roman', 'serif'].join(',');\nvar titleFontStack = ['Roboto Slab', 'Helvetica', 'Arial', 'sans-serif'];\n\nvar headings = _toConsumableArray(Array(6)).map(function (x, i) {\n  return \"h\".concat(i + 1);\n}).reduce(function (prev, curr) {\n  return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, curr, {\n    fontFamily: titleFontStack\n  }));\n}, {});\n\nvar SPACING_FACTOR = 8;\nvar theme = createMuiTheme({\n  spacing: SPACING_FACTOR,\n  typography: _objectSpread({\n    fontFamily: bodyFontStack\n  }, headings),\n  palette: {\n    primary: {\n      main: '#0C869B',\n      light: '#00B2BE',\n      dark: '#1B5266'\n    },\n    secondary: {\n      main: '#FC820E',\n      dark: '#9E4D00'\n    }\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        fontFamily: titleFontStack\n      }\n    },\n    MuiDivider: {\n      root: {\n        marginTop: SPACING_FACTOR * 4,\n        marginBottom: SPACING_FACTOR * 4\n      }\n    }\n  }\n});\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(React.Fragment, null, __jsx(HeadTags, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }))));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/sam/Sites/ea/ea-global-zoho-login/packages/next-js/pages/_app.jsx"],"names":["createMuiTheme","ThemeProvider","CssBaseline","HeadTags","bodyFontStack","join","titleFontStack","headings","Array","map","x","i","reduce","prev","curr","fontFamily","SPACING_FACTOR","theme","spacing","typography","palette","primary","main","light","dark","secondary","overrides","MuiButton","root","MuiDivider","marginTop","marginBottom","MyApp","Component","pageProps"],"mappings":";;;;;;;;;;;AAAA;AACA,SAASA,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,IAAMC,aAAa,GAAG,CAAC,cAAD,EAAiB,SAAjB,EAA4B,iBAA5B,EAA+C,OAA/C,EAAwDC,IAAxD,CAA6D,GAA7D,CAAtB;AACA,IAAMC,cAAc,GAAG,CAAC,aAAD,EAAgB,WAAhB,EAA6B,OAA7B,EAAsC,YAAtC,CAAvB;;AAEA,IAAMC,QAAQ,GAAG,mBAAIC,KAAK,CAAC,CAAD,CAAT,EACdC,GADc,CACV,UAACC,CAAD,EAAIC,CAAJ;AAAA,oBAAcA,CAAC,GAAG,CAAlB;AAAA,CADU,EAEdC,MAFc,CAEP,UAACC,IAAD,EAAOC,IAAP;AAAA,yCACHD,IADG,2BAELC,IAFK,EAEE;AAAEC,IAAAA,UAAU,EAAET;AAAd,GAFF;AAAA,CAFO,EAKX,EALW,CAAjB;;AAOA,IAAMU,cAAc,GAAG,CAAvB;AAEA,IAAMC,KAAK,GAAGjB,cAAc,CAAC;AAC3BkB,EAAAA,OAAO,EAAEF,cADkB;AAE3BG,EAAAA,UAAU;AACRJ,IAAAA,UAAU,EAAEX;AADJ,KAELG,QAFK,CAFiB;AAM3Ba,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,SADC;AAEPC,MAAAA,KAAK,EAAE,SAFA;AAGPC,MAAAA,IAAI,EAAE;AAHC,KADF;AAMPC,IAAAA,SAAS,EAAE;AACTH,MAAAA,IAAI,EAAE,SADG;AAETE,MAAAA,IAAI,EAAE;AAFG;AANJ,GANkB;AAiB3BE,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AACJb,QAAAA,UAAU,EAAET;AADR;AADG,KADF;AAMTuB,IAAAA,UAAU,EAAE;AACVD,MAAAA,IAAI,EAAE;AACJE,QAAAA,SAAS,EAAEd,cAAc,GAAG,CADxB;AAEJe,QAAAA,YAAY,EAAEf,cAAc,GAAG;AAF3B;AADI;AANH;AAjBgB,CAAD,CAA5B;;AAgCA,SAASgB,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvC,SAAO,4BACL,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEL,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEjB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeiB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CAFK,CAAP;AAOD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KApBSF,K;AAsBT,eAAeA,KAAf","sourcesContent":["// import App from 'next/app'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport HeadTags from 'components/HeadTags'\n\nconst bodyFontStack = ['Merriweather', 'Georgia', 'Times New Roman', 'serif'].join(',')\nconst titleFontStack = ['Roboto Slab', 'Helvetica', 'Arial', 'sans-serif']\n\nconst headings = [...Array(6)]\n  .map((x, i) => `h${i + 1}`)\n  .reduce((prev, curr) => ({\n    ...prev,\n    [curr]: { fontFamily: titleFontStack }\n  }), {})\n\nconst SPACING_FACTOR = 8\n\nconst theme = createMuiTheme({\n  spacing: SPACING_FACTOR,\n  typography: {\n    fontFamily: bodyFontStack,\n    ...headings\n  },\n  palette: {\n    primary: {\n      main: '#0C869B',\n      light: '#00B2BE',\n      dark: '#1B5266'\n    },\n    secondary: {\n      main: '#FC820E',\n      dark: '#9E4D00'\n    }\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        fontFamily: titleFontStack\n      }\n    },\n    MuiDivider: {\n      root: {\n        marginTop: SPACING_FACTOR * 4,\n        marginBottom: SPACING_FACTOR * 4\n      }\n    }\n  }\n})\n\nfunction MyApp({ Component, pageProps }) {\n  return <>\n    <HeadTags />\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Component {...pageProps} />\n    </ThemeProvider>\n  </>\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}